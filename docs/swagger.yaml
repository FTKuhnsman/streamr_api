basePath: /api/v1
definitions:
  abi.ABI:
    properties:
      constructor:
        $ref: '#/definitions/github_com_ethereum_go-ethereum_accounts_abi.Method'
      errors:
        additionalProperties:
          $ref: '#/definitions/abi.Error'
        type: object
      events:
        additionalProperties:
          $ref: '#/definitions/abi.Event'
        type: object
      fallback:
        allOf:
        - $ref: '#/definitions/github_com_ethereum_go-ethereum_accounts_abi.Method'
        description: |-
          Additional "special" functions introduced in solidity v0.6.0.
          It's separated from the original default fallback. Each contract
          can only define one fallback and receive function.
      methods:
        additionalProperties:
          $ref: '#/definitions/github_com_ethereum_go-ethereum_accounts_abi.Method'
        type: object
      receive:
        $ref: '#/definitions/github_com_ethereum_go-ethereum_accounts_abi.Method'
    type: object
  abi.Argument:
    properties:
      indexed:
        description: indexed is only used by events
        type: boolean
      name:
        type: string
      type:
        $ref: '#/definitions/github_com_ethereum_go-ethereum_accounts_abi.Type'
    type: object
  abi.Error:
    properties:
      id:
        description: |-
          ID returns the canonical representation of the error's signature used by the
          abi definition to identify event names and types.
        items:
          type: integer
        type: array
      inputs:
        items:
          $ref: '#/definitions/abi.Argument'
        type: array
      name:
        type: string
      sig:
        description: |-
          Sig contains the string signature according to the ABI spec.
          e.g. error foo(uint32 a, int b) = "foo(uint32,int256)"
          Please note that "int" is substitute for its canonical representation "int256"
        type: string
    type: object
  abi.Event:
    properties:
      anonymous:
        type: boolean
      id:
        description: |-
          ID returns the canonical representation of the event's signature used by the
          abi definition to identify event names and types.
        items:
          type: integer
        type: array
      inputs:
        items:
          $ref: '#/definitions/abi.Argument'
        type: array
      name:
        description: |-
          Name is the event name used for internal representation. It's derived from
          the raw name and a suffix will be added in the case of event overloading.

          e.g.
          These are two events that have the same name:
          * foo(int,int)
          * foo(uint,uint)
          The event name of the first one will be resolved as foo while the second one
          will be resolved as foo0.
        type: string
      rawName:
        description: RawName is the raw event name parsed from ABI.
        type: string
      sig:
        description: "Sig contains the string signature according to the ABI spec.\ne.g.\t
          event foo(uint32 a, int b) = \"foo(uint32,int256)\"\nPlease note that \"int\"
          is substitute for its canonical representation \"int256\""
        type: string
    type: object
  abi.FunctionType:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - Constructor
    - Fallback
    - Receive
    - Function
  big.Int:
    type: object
  github_com_ethereum_go-ethereum_accounts_abi.Method:
    properties:
      constant:
        description: Legacy indicators generated by compiler before v0.6.0
        type: boolean
      id:
        description: |-
          ID returns the canonical representation of the method's signature used by the
          abi definition to identify method names and types.
        items:
          type: integer
        type: array
      inputs:
        items:
          $ref: '#/definitions/abi.Argument'
        type: array
      name:
        description: |-
          Name is the method name used for internal representation. It's derived from
          the raw name and a suffix will be added in the case of a function overload.

          e.g.
          These are two functions that have the same name:
          * foo(int,int)
          * foo(uint,uint)
          The method name of the first one will be resolved as foo while the second one
          will be resolved as foo0.
        type: string
      outputs:
        items:
          $ref: '#/definitions/abi.Argument'
        type: array
      payable:
        type: boolean
      rawName:
        description: RawName is the raw method name parsed from ABI
        type: string
      sig:
        description: "Sig returns the methods string signature according to the ABI
          spec.\ne.g.\t\tfunction foo(uint32 a, int b) = \"foo(uint32,int256)\"\nPlease
          note that \"int\" is substitute for its canonical representation \"int256\""
        type: string
      stateMutability:
        description: |-
          StateMutability indicates the mutability state of method,
          the default value is nonpayable. It can be empty if the abi
          is generated by legacy compiler.
        type: string
      type:
        allOf:
        - $ref: '#/definitions/abi.FunctionType'
        description: |-
          Type indicates whether the method is a
          special fallback introduced in solidity v0.6.0
    type: object
  github_com_ethereum_go-ethereum_accounts_abi.Type:
    properties:
      elem:
        $ref: '#/definitions/github_com_ethereum_go-ethereum_accounts_abi.Type'
      size:
        type: integer
      t:
        description: Our own type checking
        type: integer
      tupleElems:
        description: Type information of all tuple fields
        items:
          $ref: '#/definitions/github_com_ethereum_go-ethereum_accounts_abi.Type'
        type: array
      tupleRawName:
        description: Tuple relative fields
        type: string
      tupleRawNames:
        description: Raw field name of all tuple fields
        items:
          type: string
        type: array
      tupleType:
        description: Underlying struct of the tuple
    type: object
  models.DeployedStakeResponse:
    properties:
      deployedBySponsorship:
        additionalProperties:
          $ref: '#/definitions/big.Int'
        type: object
      totalDeployed:
        $ref: '#/definitions/big.Int'
    type: object
  models.Operator:
    properties:
      contractAbi:
        $ref: '#/definitions/abi.ABI'
      contractAddr:
        items:
          type: integer
        type: array
      ownerAddr:
        items:
          type: integer
        type: array
    type: object
  models.StakedIntoResponse:
    properties:
      stakedInto:
        $ref: '#/definitions/big.Int'
    type: object
  models.TransactionResponse:
    properties:
      txHash:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: admin@ftkuhnsman.com
    name: Joseph Kuhnsman
  description: A Streamr Operator management service API in Go using Gin framework.
  title: Streamr Operator Service
  version: "1.0"
paths:
  /operator:
    get:
      description: Responds with the Operator attributes.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Operator'
            type: array
      summary: Get the Streamr Operator details.
      tags:
      - Operator
  /operator/deployedstake/:
    get:
      description: Responds with the Operator stake deployed in all sponsorships.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DeployedStakeResponse'
            type: array
      summary: Get the Streamr Operator total deployed stake.
      tags:
      - Operator
  /operator/reducestaketo/{sponsorship}/{amount}:
    get:
      description: Responds with the transaction hash.
      parameters:
      - description: sponsorship address
        in: path
        name: sponsorship
        required: true
        type: string
      - description: amount in wei
        in: path
        name: amount
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TransactionResponse'
            type: array
      summary: Change Streamr Operator stake on a given sponsor.
      tags:
      - Operator
  /operator/sponsorshipsandearnings:
    get:
      description: Responds with the list of sponsorships and uncollected earnings.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Operator'
            type: array
      summary: Get the sponsorships and earnings.
      tags:
      - Operator
  /operator/stake/{sponsorship}/{amount}:
    get:
      description: Responds with the transaction hash.
      parameters:
      - description: sponsorship address
        in: path
        name: sponsorship
        required: true
        type: string
      - description: amount in wei
        in: path
        name: amount
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TransactionResponse'
            type: array
      summary: Increase Streamr Operator stake on a given sponsor.
      tags:
      - Operator
  /operator/stakedinto/{address}:
    get:
      description: Responds with the Operator stake deployed in sponsorship.
      parameters:
      - description: get deployed stake by sponsorship
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.StakedIntoResponse'
            type: array
      summary: Get the Streamr Operator staked balance in sponsorship.
      tags:
      - Operator
  /operator/valuewithoutearnings:
    get:
      description: Responds with the Operator attributes.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Operator'
            type: array
      summary: Get the Streamr Operator details.
      tags:
      - Operator
  /operator/withdrawearnings:
    get:
      description: Responds with the Operator attributes.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TransactionResponse'
            type: array
      summary: Get the Streamr Operator details.
      tags:
      - Operator
  /operator/withdrawearningsandcompound:
    get:
      description: Withdraws earnings from all sponsorships and restake to compound.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/models.TransactionResponse'
              type: array
            type: array
      summary: Withdraw earnings from sponsorship and restake.
      tags:
      - Operator
swagger: "2.0"
