{
    "swagger": "2.0",
    "info": {
        "description": "A Streamr Operator management service API in Go using Gin framework.",
        "title": "Streamr Operator Service",
        "contact": {
            "name": "Joseph Kuhnsman",
            "email": "admin@ftkuhnsman.com"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/cronjobs": {
            "get": {
                "description": "Retrieves a list of all scheduled cron jobs.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CronJob"
                ],
                "summary": "Get all cron jobs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Scheduler"
                            }
                        }
                    }
                }
            }
        },
        "/cronjobs/create": {
            "post": {
                "description": "Adds a new cron job to the scheduler and saves it to the storage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CronJob"
                ],
                "summary": "Create a new cron job",
                "parameters": [
                    {
                        "description": "Create Cron Job",
                        "name": "cronJob",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CronJob"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CronJob"
                        }
                    }
                }
            }
        },
        "/cronjobs/delete/{id}": {
            "post": {
                "description": "Deletes a cron job in the scheduler and saves the change to the storage.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CronJob"
                ],
                "summary": "Delete a cron job by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cron Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CronJob"
                        }
                    }
                }
            }
        },
        "/cronjobs/disable/{id}": {
            "post": {
                "description": "Disables a cron job in the scheduler and saves it to the storage.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CronJob"
                ],
                "summary": "Disable a cron job by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cron Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CronJob"
                        }
                    }
                }
            }
        },
        "/cronjobs/enable/{id}": {
            "post": {
                "description": "Enables a cron job in the scheduler and saves it to the storage.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CronJob"
                ],
                "summary": "Enable a cron job by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cron Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CronJob"
                        }
                    }
                }
            }
        },
        "/operator": {
            "get": {
                "description": "Responds with the Operator attributes.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operator"
                ],
                "summary": "Get the Streamr Operator details.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Operator"
                            }
                        }
                    }
                }
            }
        },
        "/operator/deployedstake/": {
            "get": {
                "description": "Responds with the Operator stake deployed in all sponsorships.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operator"
                ],
                "summary": "Get the Streamr Operator total deployed stake.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DeployedStakeResponse"
                            }
                        }
                    }
                }
            }
        },
        "/operator/reducestaketo/{sponsorship}/{amount}": {
            "get": {
                "description": "Responds with the transaction hash.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operator"
                ],
                "summary": "Change Streamr Operator stake on a given sponsor.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sponsorship address",
                        "name": "sponsorship",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "amount in wei",
                        "name": "amount",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/operator/sponsorshipsandearnings": {
            "get": {
                "description": "Responds with the list of sponsorships and uncollected earnings.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operator"
                ],
                "summary": "Get the sponsorships and earnings.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GetSponsorshipsAndEarningsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/operator/stake/{sponsorship}/{amount}": {
            "get": {
                "description": "Responds with the transaction hash.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operator"
                ],
                "summary": "Increase Streamr Operator stake on a given sponsor.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sponsorship address",
                        "name": "sponsorship",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "amount in wei",
                        "name": "amount",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/operator/stakedinto/{address}": {
            "get": {
                "description": "Responds with the Operator stake deployed in sponsorship.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operator"
                ],
                "summary": "Get the Streamr Operator staked balance in sponsorship.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get deployed stake by sponsorship",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.StakedIntoResponse"
                            }
                        }
                    }
                }
            }
        },
        "/operator/stakeprorata": {
            "get": {
                "description": "Increase stake on all sponsorships with all available DATA pro-rated by sponsorship current stake.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operator"
                ],
                "summary": "Distribute available DATA to all sponsorships.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/operator/undelegationqueue": {
            "get": {
                "description": "Responds with the undelegation queue.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operator"
                ],
                "summary": "Get the undelegation queue.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/operator/valuewithoutearnings": {
            "get": {
                "description": "Responds with the Operator attributes.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operator"
                ],
                "summary": "Get the Streamr Operator details.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "/operator/withdrawearnings": {
            "get": {
                "description": "Responds with the Operator attributes.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operator"
                ],
                "summary": "Get the Streamr Operator details.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/operator/withdrawearningsandcompound": {
            "get": {
                "description": "Withdraws earnings from all sponsorships and restake to compound.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operator"
                ],
                "summary": "Withdraw earnings from sponsorship and restake.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "abi.ABI": {
            "type": "object",
            "properties": {
                "constructor": {
                    "$ref": "#/definitions/github_com_ethereum_go-ethereum_accounts_abi.Method"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/abi.Error"
                    }
                },
                "events": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/abi.Event"
                    }
                },
                "fallback": {
                    "description": "Additional \"special\" functions introduced in solidity v0.6.0.\nIt's separated from the original default fallback. Each contract\ncan only define one fallback and receive function.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_ethereum_go-ethereum_accounts_abi.Method"
                        }
                    ]
                },
                "methods": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/github_com_ethereum_go-ethereum_accounts_abi.Method"
                    }
                },
                "receive": {
                    "$ref": "#/definitions/github_com_ethereum_go-ethereum_accounts_abi.Method"
                }
            }
        },
        "abi.Argument": {
            "type": "object",
            "properties": {
                "indexed": {
                    "description": "indexed is only used by events",
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/github_com_ethereum_go-ethereum_accounts_abi.Type"
                }
            }
        },
        "abi.Error": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID returns the canonical representation of the error's signature used by the\nabi definition to identify event names and types.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/abi.Argument"
                    }
                },
                "name": {
                    "type": "string"
                },
                "sig": {
                    "description": "Sig contains the string signature according to the ABI spec.\ne.g. error foo(uint32 a, int b) = \"foo(uint32,int256)\"\nPlease note that \"int\" is substitute for its canonical representation \"int256\"",
                    "type": "string"
                }
            }
        },
        "abi.Event": {
            "type": "object",
            "properties": {
                "anonymous": {
                    "type": "boolean"
                },
                "id": {
                    "description": "ID returns the canonical representation of the event's signature used by the\nabi definition to identify event names and types.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/abi.Argument"
                    }
                },
                "name": {
                    "description": "Name is the event name used for internal representation. It's derived from\nthe raw name and a suffix will be added in the case of event overloading.\n\ne.g.\nThese are two events that have the same name:\n* foo(int,int)\n* foo(uint,uint)\nThe event name of the first one will be resolved as foo while the second one\nwill be resolved as foo0.",
                    "type": "string"
                },
                "rawName": {
                    "description": "RawName is the raw event name parsed from ABI.",
                    "type": "string"
                },
                "sig": {
                    "description": "Sig contains the string signature according to the ABI spec.\ne.g.\t event foo(uint32 a, int b) = \"foo(uint32,int256)\"\nPlease note that \"int\" is substitute for its canonical representation \"int256\"",
                    "type": "string"
                }
            }
        },
        "abi.FunctionType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "Constructor",
                "Fallback",
                "Receive",
                "Function"
            ]
        },
        "big.Int": {
            "type": "object"
        },
        "blockchain.TxManager": {
            "type": "object"
        },
        "ecdsa.PrivateKey": {
            "type": "object",
            "properties": {
                "d": {
                    "$ref": "#/definitions/big.Int"
                },
                "elliptic.Curve": {},
                "x": {
                    "$ref": "#/definitions/big.Int"
                }
            }
        },
        "github_com_ethereum_go-ethereum_accounts_abi.Method": {
            "type": "object",
            "properties": {
                "constant": {
                    "description": "Legacy indicators generated by compiler before v0.6.0",
                    "type": "boolean"
                },
                "id": {
                    "description": "ID returns the canonical representation of the method's signature used by the\nabi definition to identify method names and types.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/abi.Argument"
                    }
                },
                "name": {
                    "description": "Name is the method name used for internal representation. It's derived from\nthe raw name and a suffix will be added in the case of a function overload.\n\ne.g.\nThese are two functions that have the same name:\n* foo(int,int)\n* foo(uint,uint)\nThe method name of the first one will be resolved as foo while the second one\nwill be resolved as foo0.",
                    "type": "string"
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/abi.Argument"
                    }
                },
                "payable": {
                    "type": "boolean"
                },
                "rawName": {
                    "description": "RawName is the raw method name parsed from ABI",
                    "type": "string"
                },
                "sig": {
                    "description": "Sig returns the methods string signature according to the ABI spec.\ne.g.\t\tfunction foo(uint32 a, int b) = \"foo(uint32,int256)\"\nPlease note that \"int\" is substitute for its canonical representation \"int256\"",
                    "type": "string"
                },
                "stateMutability": {
                    "description": "StateMutability indicates the mutability state of method,\nthe default value is nonpayable. It can be empty if the abi\nis generated by legacy compiler.",
                    "type": "string"
                },
                "type": {
                    "description": "Type indicates whether the method is a\nspecial fallback introduced in solidity v0.6.0",
                    "allOf": [
                        {
                            "$ref": "#/definitions/abi.FunctionType"
                        }
                    ]
                }
            }
        },
        "github_com_ethereum_go-ethereum_accounts_abi.Type": {
            "type": "object",
            "properties": {
                "elem": {
                    "$ref": "#/definitions/github_com_ethereum_go-ethereum_accounts_abi.Type"
                },
                "size": {
                    "type": "integer"
                },
                "t": {
                    "description": "Our own type checking",
                    "type": "integer"
                },
                "tupleElems": {
                    "description": "Type information of all tuple fields",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_ethereum_go-ethereum_accounts_abi.Type"
                    }
                },
                "tupleRawName": {
                    "description": "Tuple relative fields",
                    "type": "string"
                },
                "tupleRawNames": {
                    "description": "Raw field name of all tuple fields",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tupleType": {
                    "description": "Underlying struct of the tuple"
                }
            }
        },
        "models.CronJob": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "example": true
                },
                "endpoint": {
                    "type": "string",
                    "example": "/api/v1/sample-endpoint"
                },
                "method": {
                    "type": "string",
                    "example": "GET"
                },
                "name": {
                    "type": "string",
                    "example": "sample job"
                },
                "schedule": {
                    "type": "string",
                    "example": "0/5 * * * * *"
                }
            }
        },
        "models.DeployedStakeResponse": {
            "type": "object",
            "properties": {
                "deployedBySponsorship": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/big.Int"
                    }
                },
                "totalDeployed": {
                    "$ref": "#/definitions/big.Int"
                }
            }
        },
        "models.GetSponsorshipsAndEarningsResponse": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "earnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/big.Int"
                    }
                },
                "maxAllowedEarnings": {
                    "$ref": "#/definitions/big.Int"
                }
            }
        },
        "models.Operator": {
            "type": "object",
            "properties": {
                "contractAbi": {
                    "$ref": "#/definitions/abi.ABI"
                },
                "contractAddr": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "ownerAddr": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "privateKey": {
                    "$ref": "#/definitions/ecdsa.PrivateKey"
                },
                "txManager": {
                    "$ref": "#/definitions/blockchain.TxManager"
                }
            }
        },
        "models.Scheduler": {
            "type": "object",
            "properties": {
                "jobs": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/models.CronJob"
                    }
                }
            }
        },
        "models.StakedIntoResponse": {
            "type": "object",
            "properties": {
                "stakedInto": {
                    "$ref": "#/definitions/big.Int"
                }
            }
        }
    }
}